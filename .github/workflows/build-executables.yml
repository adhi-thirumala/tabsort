name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build binary on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build binary on non-Windows
        if: runner.os != 'Windows'
        run: |
          pyinstaller --onefile tabsort.py
          # Ensure the output file is named "tabsort"
          mv dist/tabsort tabsort
      - name: Build binary on Windows
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          pyinstaller --onefile tabsort.py
          rem Rename to desired name
          rename dist\tabsort.exe tabsort.exe

      - name: Upload artifact for non-Windows
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: tabsort-${{ runner.os }}
          path: tabsort
          retention-days: 7

      - name: Upload artifact for Windows
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: tabsort-Windows.exe
          path: tabsort.exe
          retention-days: 7

  release:
    name: Create Release and Upload Assets
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get version from VERSION file
        id: get_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "v${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: |
            artifacts/tabsort-Linux/tabsort
            artifacts/tabsort-macOS/tabsort
            artifacts/tabsort-Windows.exe/tabsort.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

